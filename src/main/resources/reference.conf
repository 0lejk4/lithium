com.swissborg.sbr {
  # The name of the strategy to use for split-brain resolution.
  # Available: static-quorum, keep-majority, keep-referee, keep-oldest.
  active-strategy = null

  # Duration during which the cluster must be stable before taking
  # action on the network-partition. The duration must chose large
  # enough to allow for membership events to be gossiped and persistent
  # actor to be migrated.
  stable-after = null

  # When enabled the resolver differentiates between unreachable and
  # indirectly-connected nodes. The latter will always be downed.
  track-indirectly-connected = true

  # Down the partition if it has been unstable for too long. If the cluster
  # wait too long before downing itself persistent actors might already be
  # restarted on another partition, leading to two instances of the same
  # persistent actor.
  # It is by default derived from 'stable-after' to be 'stable-after' + 3/4 'stable-after'.
  # If overriden, it must be less than 2 * 'stable-after'. To disable the downing, set
  # it to 'off', however this is not recommended.
  # down-all-when-unstable = undefined

  static-quorum {
    # Minimum number of nodes in the surviving partition.
    quorum-size = null

    # Only take in account nodes with this role.
    role = ""
  }

  keep-majority {
    # Only take in account nodes with this role.
    role = ""
  }

  keep-oldest {
    # Down the oldest member when alone.
    down-if-alone = no

    # Only take in account nodes with this role.
    role = ""
  }

  keep-referee {
    # Address of the member in the format "akka.tcp://system@host:port"
    address = null

    # Minimum number of nodes in the surviving partition.
    down-all-if-less-than-nodes = 1
  }
}

akka {
  actor {
    serializers {
      sb-proto = "com.swissborg.sbr.protobuf.SBMessageSerializer"
    }

    serialization-bindings {
      "com.swissborg.sbr.reachability.SBReachabilityReporter$Contention" = sb-proto
      "com.swissborg.sbr.reachability.SBReachabilityReporter$ContentionAck" = sb-proto
    }
  }
}